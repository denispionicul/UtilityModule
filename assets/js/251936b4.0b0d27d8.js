"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[340],{6214:e=>{e.exports=JSON.parse('{"functions":[{"name":"Destroy","desc":" \\nGets rid of the meter.","params":[{"name":"self","desc":"","lua_type":"Meter"}],"returns":[],"function_type":"static","source":{"line":92,"path":"src/UtilityModule/Meter.lua"}},{"name":"RemoveUI","desc":" \\nRemoves the UI, if any.\\n\\n:::caution\\nWill error if no UI is binded!\\n:::","params":[{"name":"self","desc":"","lua_type":"Meter"}],"returns":[],"function_type":"static","source":{"line":105,"path":"src/UtilityModule/Meter.lua"}},{"name":"SetUI","desc":" \\nBinds the meter to a UI Instance.","params":[{"name":"self","desc":"","lua_type":"Meter"},{"name":"UI","desc":"The UI it should bind to.","lua_type":"GuiBase2d"},{"name":"Axis","desc":"the axis that the bar will change. \\"X\\" or \\"Y\\" only.","lua_type":"string"},{"name":"TextUI","desc":"Optional text label to display the meter value.","lua_type":"GuiLabel?"}],"returns":[],"function_type":"static","source":{"line":118,"path":"src/UtilityModule/Meter.lua"}},{"name":"GetPercentage","desc":" \\nReturns the value in a percentage _%_","params":[{"name":"self","desc":"","lua_type":"Meter"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":134,"path":"src/UtilityModule/Meter.lua"}},{"name":"SetValue","desc":" \\nSets the value to the given one.\\n\\n:::note\\nThis will get affected by the \\"IntegerOnly\\" property.\\n:::","params":[{"name":"self","desc":"","lua_type":"Meter"},{"name":"number","desc":"The value it should be set to.","lua_type":"number"}],"returns":[],"function_type":"static","source":{"line":147,"path":"src/UtilityModule/Meter.lua"}},{"name":"GetValue","desc":" \\nReturns the value of the meter.","params":[{"name":"self","desc":"","lua_type":"Meter"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":155,"path":"src/UtilityModule/Meter.lua"}}],"properties":[{"name":"Minimum","desc":" \\nThe Minimum the timer can reach.","lua_type":"number","source":{"line":52,"path":"src/UtilityModule/Meter.lua"}},{"name":"Maximum","desc":" \\nThe Maximum the timer can reach.","lua_type":"number","source":{"line":57,"path":"src/UtilityModule/Meter.lua"}},{"name":"IntegerOnly","desc":" \\nIndicates if the number will always be an integer.","lua_type":"boolean","source":{"line":62,"path":"src/UtilityModule/Meter.lua"}},{"name":"UI","desc":" \\nThe UI that the meter will use.","lua_type":"GuiBase2d","source":{"line":67,"path":"src/UtilityModule/Meter.lua"}},{"name":"UIDisplayPercentage","desc":" \\nDetermines if the UI will display a %number rather that number.","lua_type":"boolean","source":{"line":72,"path":"src/UtilityModule/Meter.lua"}},{"name":"OnChanged","desc":" \\nFires whenever the value changes.","lua_type":"RBXScriptSignal","source":{"line":77,"path":"src/UtilityModule/Meter.lua"}},{"name":"OnEmpty","desc":" \\nFires whenever the value is 0 or lower.","lua_type":"RBXScriptSignal","source":{"line":82,"path":"src/UtilityModule/Meter.lua"}},{"name":"OnFill","desc":" \\nFires whenever the value is at max.","lua_type":"RBXScriptSignal","source":{"line":87,"path":"src/UtilityModule/Meter.lua"}}],"types":[{"name":"Meter","desc":" \\n\\nThe Meter class.","fields":[{"name":"Minimum","lua_type":"number","desc":""},{"name":"Maximum","lua_type":"number","desc":""},{"name":"IntegerOnly","lua_type":"boolean","desc":""},{"name":"UIDisplayPercentage","lua_type":"boolean","desc":""},{"name":"OnChanged","lua_type":"RBXScriptSignal","desc":""},{"name":"OnEmpty","lua_type":"RBXScriptSignal","desc":""},{"name":"OnFill","lua_type":"RBXScriptSignal","desc":""},{"name":"UI","lua_type":"GuiBase2d","desc":""}],"source":{"line":36,"path":"src/UtilityModule/Meter.lua"}}],"name":"Meter","desc":" \\nA meter is simply a value within a given min or max value, unlike NumberRanges,\\nthey have a value. A meter also has events in which are fired whenever it is full, empty or simply changed. A meter can be set to an\\nUI Instance and it will modify whenever the value inside a meter changes.\\n\\n:::note\\nYou can do self:Function() even if this document says Meter.Function(self)!\\n:::","source":{"line":17,"path":"src/UtilityModule/Meter.lua"}}')}}]);